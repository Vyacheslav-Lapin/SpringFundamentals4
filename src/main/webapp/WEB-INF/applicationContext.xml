<?xml version="1.0" encoding="UTF-8"?>
<!--Часто удобно разбивать контекст на несколько файлов:-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:p="http://www.springframework.org/schema/p"

       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
                           http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd">

    <!--<jdbc:embedded-database id="dataSource">-->
        <!--<jdbc:script location="classpath:schema.sql"/>-->
    <!--</jdbc:embedded-database>-->

    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"
          p:locations="classpath:jdbc.properties"/>

    <bean id="dataSource" destroy-method="close"
          class="org.apache.commons.dbcp.BasicDataSource"
          p:driverClassName="${jdbc.driverClassName}"
          p:url="${jdbc.url}"
          p:username="${jdbc.username}"
          p:password="${jdbc.password}"/>

    <alias alias="aliasName" name="originalName"/>

    <!--Для конкретного бина:-->
    <bean id="lazy" class="ru.epam.training.ClientService"
          lazy-init="true"/>

    <!--При помощи конструктора:-->
    <bean id="example1"
          class="ru.epam.training.samples.Example"/>

    <!--При помощи статического фабричного метода:-->
    <bean id="clientService"
          class="ru.epam.training.samples.ClientService"
          factory-method="createInstance"/>

    <!--При помощи не статического фабричного метода:-->
    <bean id="serviceFactory"
          class="examples.DefaultServiceFactory"/>

    <bean id="clientService2"
          factory-bean="serviceFactory"
          factory-method="createClientServiceInstance"/>

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
          p:dataSource-ref="dataSource"/>

    <bean id="messageSource"
          class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basenames">
            <list>
                <value>errors</value>
                <value>messages</value>
            </list>
        </property>
    </bean>

</beans>
